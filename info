Часть 1: Теоретические вопросы
Объясните основные принципы объектно-ориентированного программирования.

Абстракция — это модель некоего объекта или явления реального мира, в которой опущены
незначительные детали, не играющие существенной роли в данном контексте. Абстракция - 
теоретическое обобщение. Абстрактный класс - это максимально абстрактная, очень
приблизительная «заготовка» для группы будущих классов. Эту заготовку нельзя использовать
в готовом виде — слишком «сырая». Но она описывает некое общее состояние и поведение, 
которым будут обладать будущие классы — наследники абстрактного класса.

Инкапсуляция – это свойство системы, позволяющее объединить данные и методы, 
работающие с ними в классе и скрыть детали реализации от пользователя. 

Наследование — это возможность создания новых классов на основе существующих.
Главная польза от наследования — повторное использование существующего кода.

Полиморфизм — это возможность работать с несколькими типами так, будто это один и тот же
тип. При этом поведение объектов будет разным в зависимости от того, к какому типу они
принадлежат.

Что такое Garbage Collection в Java и как он работает?

Garbage Collection (GC) в Java — это автоматический процесс управления памятью, который помогает освобождать память, занимаемую объектами, которые больше не используются в программе. Основная цель GC — предотвратить утечки памяти и улучшить производительность приложений за счет автоматического удаления ненужных объектов.

Создание объектов: В Java объекты создаются в куче (heap), когда вызывается оператор new. Куча — это область памяти, выделенная для динамического распределения памяти.

Определение ненужных объектов: GC определяет объекты, которые больше не имеют ссылок из активного кода, и помечает их для удаления. Объект считается "мертвым", если к нему нельзя добраться через цепочку ссылок, начинающуюся от активных переменных.


Какие различия между ArrayList и LinkedList?

В LinkedList вставка осуществляется так: находится элемент, за которым должен следовать
вставляемый элемент, изменяются ссылки в нем и следующим за ним.
В ArrayList создается новый массив, если в текущем нет места. Те элементы которые находятся до
вставляемого, остаются на месте, или копируются в новый. Далее добавляется вставляемый элемент. 
Затем копируются оставшиеся элементы, которые были в исходном
В LinkedList чтобы найти элемент с нужным индексом, нужно пройтись поочередно по ссылкам от
первого элемента и до последнего (в худшем случае).
В ArrayList получения элемента происходит простым взятием по индексу из массива.
 LinkedList удаление происходит аналогично вставке. 
В ArrayList, примерно, так же как и при добавлении. Если рассматривать удаление, то видим в
среднем, работают они одинаково. Но мы бы не стали рекомендовать использовать LinkedList, за
исключением ситуации когда, преобладает удаление или вставка в начало или конец списка


Что такое ConcurrentHashMap и в чем его преимущества по сравнению с HashMap?

HashMap — это стандартная реализация хэш-таблицы в Java, которая не является потокобезопасной. Это означает, что если несколько потоков одновременно обращаются к одному и тому же экземпляру HashMap и изменяют его, это может привести к непредсказуемым результатам.

ConcurrentHashMap — это потокобезопасная реализация хэш-таблицы, предназначенная для использования в многопоточных приложениях. Она позволяет нескольким потокам одновременно читать из карты и обновлять ее без необходимости использовать внешнюю синхронизацию.

Объясните, что такое JVM, JRE и JDK.

JVM (Java Virtual Machine, виртуальная машина Java) — это программная среда, которая выполняет Java-байт-код. JVM является основой для выполнения Java-программ и обеспечивает платформонезависимость Java, поскольку байт-код может быть выполнен на любой платформе, где доступна соответствующая JVM.

JRE (Java Runtime Environment, среда выполнения Java) — это набор инструментов и библиотек, необходимых для выполнения Java-программ. JRE включает JVM, а также стандартные библиотеки классов Java и другие компоненты, необходимые для выполнения Java-приложений.

JDK (Java Development Kit, комплект разработки Java) — это полный набор инструментов для разработки, компиляции, отладки и выполнения Java-программ. 
